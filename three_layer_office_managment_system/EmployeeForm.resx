<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>